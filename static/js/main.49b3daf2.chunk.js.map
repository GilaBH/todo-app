{"version":3,"sources":["components/AddTask.js","images/icon-cross.svg","components/Task.js","components/FilterButtons.js","components/globalStyles.js","images/bg-desktop-light.jpg","images/bg-desktop-dark.jpg","components/Theme.js","images/icon-moon.svg","images/icon-sun.svg","components/Toggler.js","App.js","components/useDarkMode.js","reportWebVitals.js","index.js"],"names":["AddTask","addTask","useState","content","setContent","onSubmit","e","preventDefault","onChange","target","value","Task","tasks","deleteTask","id","toggleTaskCompleted","completed","index","task","className","type","defaultChecked","src","Cross","onClick","draggableId","toString","provided","ref","innerRef","draggableProps","dragHandleProps","FilterButtons","name","setFilter","GlobalStyles","createGlobalStyle","theme","background","backgroundColor","text","inputListColor","borderBottom","crossoutColor","lightTheme","LightBackground","darkTheme","DarkBackground","Button","styled","button","Toggle","toggleTheme","Moon","Sun","filters","All","Active","Completed","filterNames","Object","keys","App","setTasks","filter","setTheme","setMode","mode","window","localStorage","setItem","useEffect","localTheme","getItem","useDarkMode","themeToggler","taskList","map","indexOf","filterList","newTasks","updatedTasks","themeMode","counter","length","counterNoun","console","log","newTask","nanoid","onDragEnd","result","destination","items","Array","from","splice","source","reorderedItem","droppableId","droppableProps","placeholder","activeTasks","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.49b3daf2.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\n\r\nexport default function AddTask({addTask}) {\r\n\r\n    const [content, setContent] = useState('');\r\n\r\n    function handleChange(e){\r\n        setContent(e.target.value)\r\n    }\r\n\r\n    function handleSubmit(e){\r\n        e.preventDefault();\r\n        addTask(content);\r\n        setContent('');\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n             onChange={handleChange}\r\n             value={content}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/icon-cross.6ee81d30.svg\";","import React from 'react';\r\nimport Cross from '../images/icon-cross.svg';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\n\r\nexport default function Task({tasks, deleteTask, content, id, toggleTaskCompleted, completed, index}) {\r\n    \r\n        const task = (\r\n                <li \r\n                className=\"task\">\r\n                    <div className=\"taskContent\">\r\n                    <input \r\n                    id={id}\r\n                    type=\"checkbox\" \r\n                    onChange={()=> toggleTaskCompleted(id)}\r\n                    defaultChecked={completed}\r\n                    className={completed ? \"gradient\": null}\r\n                    />\r\n                    <p className={completed ? \"crossout\" : null}>{content}</p>\r\n                    </div>\r\n                    <img src={Cross} onClick={()=>deleteTask(id)}/>\r\n                </li>\r\n            )\r\n        \r\n    return (\r\n        <Draggable draggableId={id.toString()} index={index}>\r\n            {(provided) => (\r\n                <div \r\n                ref={provided.innerRef}\r\n                {...provided.draggableProps}\r\n                {...provided.dragHandleProps}>\r\n                    {task}\r\n                </div>\r\n            )}\r\n        </Draggable>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function FilterButtons({name, setFilter}) {\r\n    \r\n    return (\r\n            <button \r\n            onClick={()=>setFilter(name)}\r\n            className={name == \"All\" ? 'blue' : null}>\r\n                {name}\r\n            </button>\r\n    )\r\n}\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n    body {\r\n        background: ${({theme}) => theme.background};\r\n        background-color: ${({theme}) => theme.backgroundColor};\r\n        color: ${({theme}) => theme.text};\r\n        transition: all 0.50s linear;\r\n    }\r\n    \r\n    form input, ul, .bottomStats {\r\n        background-color: ${({theme}) => theme.inputListColor}\r\n    }\r\n\r\n    form input {\r\n        color: ${({theme}) => theme.text};\r\n    }\r\n\r\n    .task {\r\n        border-bottom: ${({theme})=> theme.borderBottom}\r\n    }\r\n\r\n    .task input {\r\n        border: ${({theme})=> theme.borderBottom}\r\n    }\r\n\r\n    .crossout {\r\n        color: ${({theme}) => theme.crossoutColor};\r\n    }\r\n\r\n    button:focus {\r\n        color: ${({theme}) => theme.text};\r\n    }\r\n    `","export default __webpack_public_path__ + \"static/media/bg-desktop-light.3508d620.jpg\";","export default __webpack_public_path__ + \"static/media/bg-desktop-dark.73e47dbb.jpg\";","import LightBackground from '../images/bg-desktop-light.jpg';\r\nimport DarkBackground from '../images/bg-desktop-dark.jpg';\r\n\r\nexport const lightTheme = {\r\n    background: `no-repeat url(${LightBackground})`,\r\n    backgroundColor: \"#E4E5F1\",\r\n    text: '#484B6A',\r\n    inputListColor: 'white',\r\n    borderBottom: '1px solid #D2D3DB',\r\n    crossoutColor: '#D2D3DB',\r\n  }\r\n  \r\n  export const darkTheme = {\r\n    background: `no-repeat url(${DarkBackground})`,\r\n    backgroundColor: '#161722',\r\n    text: '#CACDE8',\r\n    inputListColor: '#25273C',\r\n    borderBottom: \"1px solid #4D5066\",\r\n    crossoutColor: '#4D5066',\r\n  }","export default __webpack_public_path__ + \"static/media/icon-moon.6c03114b.svg\";","export default __webpack_public_path__ + \"static/media/icon-sun.910b1f9a.svg\";","import React from 'react';\r\nimport { func, string } from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport Moon from '../images/icon-moon.svg';\r\nimport Sun from '../images/icon-sun.svg'\r\n\r\nconst Button = styled.button`\r\n  border: none;\r\n  cursor: pointer;\r\n  `;\r\n\r\nconst Toggle = ({theme, toggleTheme}) => {\r\n    return (\r\n        <Button onClick={toggleTheme} >\r\n            <img src={theme === 'light' ? Moon : Sun } />\r\n        </Button>\r\n\r\n    )\r\n}\r\n\r\nToggle.propTypes = {\r\n    theme: string.isRequired,\r\n    toggleTheme: func.isRequired,\r\n}\r\n\r\nexport default Toggle;","import React, {useState} from 'react';\nimport AddTask from './components/AddTask'\nimport Task from './components/Task'\nimport FilterButtons from './components/FilterButtons'\nimport { DragDropContext, Droppable} from 'react-beautiful-dnd'\nimport { nanoid } from 'nanoid';\nimport {ThemeProvider} from 'styled-components';\nimport { useDarkMode } from './components/useDarkMode'\nimport {GlobalStyles} from './components/globalStyles';\nimport {lightTheme, darkTheme} from './components/Theme';\nimport Toggle from './components/Toggler'\n\nconst filters = {\n  All: () => true,\n  Active: task => !task.completed,\n  Completed: task=> task.completed\n};\n\nconst filterNames = Object.keys(filters);\n\nexport default function App() {\n  \n  const [tasks, setTasks] = useState([])\n  const [filter, setFilter] = useState('All')\n  const [theme, themeToggler] = useDarkMode();\n\n  const taskList= tasks\n    .filter(filters[filter])\n    .map(task => \n        <Task \n        tasks={tasks} \n        deleteTask={deleteTask}\n        id={task.id} \n        content={task.content}\n        toggleTaskCompleted={toggleTaskCompleted}\n        completed={task.completed}\n        index={tasks.indexOf(task)}\n        key={task.id.toString()}\n       />)\n\n\n  const filterList = filterNames.map(name=> \n    <FilterButtons \n      key={name}\n      name={name}\n      setFilter={setFilter}\n    />)\n\n  function addTask(content) {\n    const newTask = {id: nanoid(), content: content, completed: false}\n    setTasks([...tasks, newTask])\n  }\n  \n  function deleteTask(id) {\n    const newTasks = tasks.filter(task => task.id !== id)\n    setTasks(newTasks)\n  }\n\n  function toggleTaskCompleted(id) {\n    const updatedTasks = tasks.map(task => {\n      if(id==task.id) {\n        return {...task, completed: !task.completed}\n      }\n      return task;\n    })\n    setTasks(updatedTasks);\n\n  }\n\n  function handleClearCompleted(){\n    const activeTasks = tasks.filter(task => !task.completed) \n    setTasks(activeTasks)\n  }\n  \n\n  function handleDragEnd(result) {\n    if (!result.destination) return; \n    const items = Array.from(tasks)\n    const [reorderedItem] = items.splice(result.source.index, 1);\n    items.splice(result.destination.index, 0, reorderedItem);\n\n    setTasks(items)\n  }\n\n  const themeMode = theme === 'light' ? lightTheme : darkTheme;\n\n  const counter = tasks.length\n  const counterNoun = tasks.length == 1 ? 'item' : 'items'\n\n  console.log(tasks)\n  return (\n    <ThemeProvider theme={themeMode}>\n    <div className=\"container\">\n    <GlobalStyles />\n      <div className=\"heading\">\n        <h1>Todo</h1>\n        <Toggle theme={theme} toggleTheme={themeToggler} />\n      </div>\n    <AddTask addTask={addTask}/>\n    <DragDropContext onDragEnd={handleDragEnd}>\n      <Droppable droppableId=\"drop-area\">\n        {(provided) => (\n          <ul\n          {...provided.droppableProps} ref={provided.innerRef}>\n          {taskList} \n          {provided.placeholder}\n          </ul>\n        )}\n      </Droppable>\n    </DragDropContext>\n    <div className=\"bottomStats\">\n      <p>{counter} {counterNoun} left</p>\n      <div className=\"buttons\">\n        {filterList}\n        <button onClick={handleClearCompleted}> Clear Completed</button>\n      </div>\n    </div>\n    <footer>Drag and drop to reorder list</footer>\n    </div>\n    </ThemeProvider>\n  )\n}\n","import {useEffect, useState} from 'react';\r\n\r\nexport const useDarkMode = () => {\r\n    const [theme, setTheme] = useState('light');\r\n\r\n    const setMode = mode => {\r\n        window.localStorage.setItem('theme', mode)\r\n        setTheme(mode)\r\n    }\r\n\r\n    const themeToggler = () => {\r\n        theme === 'light' ? setMode('dark') : setMode('light')\r\n    }\r\n\r\n    useEffect(() => {\r\n        const localTheme = window.localStorage.getItem('theme')\r\n        localTheme && setTheme(localTheme)\r\n       \r\n    }, [])\r\n        return[theme, themeToggler]\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}